from marshmallow import Schema,fields


class PlainItemSchema(Schema):
    id = fields.Str(dump_only=True) ##this field is generated by us, therefore it won't come from a request, dump_only=true ensures that it is only used to send data to the client
    name = fields.Str(required=True)
    price=fields.Float(required=True)
    # store_id= fields.Str(required=True)

class ItemUpdateSchema(Schema):
    ## both are optional
    name = fields.Str()
    price = fields.Float()
    store_id = fields.Int()

class PlainStoreSchema(Schema):
    id = fields.Str(dump_only=True)
    name = fields.Str(required=True)

class PlainTagSchema(Schema):
    id = fields.Int(dump_only=True)
    name = fields.Str()

class StoreSchema(PlainStoreSchema):
    items = fields.List(fields.Nested(PlainItemSchema()), dump_only=True)
    tags = fields.List(fields.Nested(PlainTagSchema()), dump_only=True)


class TagSchema(PlainTagSchema):
    store_id = fields.Int(load_only=True)
    store = fields.Nested(PlainStoreSchema(), dump_only=True)

class ItemSchema(PlainItemSchema):
    store_id = fields.Int(required=True, load_only=True)
    store = fields.Nested(PlainStoreSchema(), dump_only=True) 

class UserSchema(Schema):
    id = fields.Int(dump_only=True)
    username = fields.Str(required=True)
    password = fields.Str(required=True, load_only=True)
